##배열 
메모리의 연속 공간에 값이 채워져 있는 형태의 자료구조 

특징
인덱스를 통해 참조(바로 접근) 가능 
선언한 자료형의 값만 저장 가능
새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어렵다 

>1과 2 사이의 값에 4를 넣으려면 
2를 삭제하고 4를 덮어씌우는게 아니라 1뒤의 값 2,3..을 뒤의 인덱스로 옮겨주고 2가 있던 인덱스에 4를 채워넣는다는 의미 

배열의 크기는 선언할 때 지정, 한 번 선언한 이후 크기를 늘리거나 줄일 수 없다 

a[10]  --> 10칸 


##리스트 
값과 포인터를 묶은 노드라는 것을 포인터로 연결한 자료구조 

노드는 포인터를 생으로 갖는 기초 단위 

비어 있음 - 49(head) - 55(next) - 20 (next) - data(pointer) - 23(tail) - 비어 있음

특징
인덱스가 없어 head 포인터부터 순서대로 접근한다=접근하는 속도가 느리다 
포인터로 연결되어 있으므로 데이터를 삽입하기너 삭제하는 연산속도가 빠르다 

>49 - 55 - 20 순서로 포인터가 연결되어 있을 때 
49에서 20로 바로 포인터를 연결하면 55를 삭제하는 효과가 있다 
선언할때 크기를 별도로 지정하지 않아도 된다. 크기가 변하기 쉬운 데이터를 다룰때(예시: ArrayList, LinkedList) 적절하다 
포인터를 저장할 공간이 필요하므로 배열보다 구조가 복잡하다 


